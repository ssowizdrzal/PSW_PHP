Pamiętanie preferencji w ciastkach

Witrynę należy wyposażyć w mechanizm umożliwiający zmianę i zapamiętanie jej wyglądu (krój i
kolor czcionki, kolor tła itp.). Można np. przygotować kilka garniturów stylów, które użytkownik
będzie mógł wybierać w zależności od swoich preferencji. Preferencje użytkownika serwer ma
przechowywać w ciastku. Na podstawie zapisanych w ciastku danych, serwer ma odpowiednio
modyfikować strony witryny i przesyłać je do przeglądarki. Warto spreparować osobną stronę
„diagnostyczną”, która będzie ujawniała zawartość ciastka.
Należy skorzystać z następujących elementów języka PHP:

• funkcja setcookie() – inicjuje ciastko,
• funkcja time() – podaje aktualny znacznik czasu (przydaje się do wyznaczani terminu
ważności ciastka),
• tablica $_COOKIE – przechowuje wartości ciastek.

Zagadnienia, czyli o co prowadzący może zapytać
1. Opisz sekwencję wymiany wiadomości, gdy klient i serwer korzystają z ciastek. W którym miejscu
wiadomości HTTP przesyłane są ciastka?
2. Omów działanie funkcji setcookie().
3. Zastanów się nad funkcjonalnością stron w przypadku wyłączenia zapisu ciastek w przeglądarce.
Czy jest jakieś alternatywne rozwiązanie?
4. Opisz zasadę działania mechanizmu sesji. Omów działanie funkcji session_start().

------------------------------------------------------------------------------------------------------------

Śledzenie sesji
Proszę zdecydować, które strony witryny będą dostępne publicznie, a które tylko po uwierzytelnieniu
(po zalogowaniu za pośrednictwem loginu i hasła). Do zapamiętania faktu uwierzytelnienia należy
wykorzystać mechanizm sesji. Identyfikator sesji serwer ma przechowywać w ciastku. Warto
spreparować osobną stronę „diagnostyczną”, która będzie ujawniała zawartość ciastka. Podczas
procedury logowania, dane na serwer powinny być przekazywane metodą POST. Strony witryny
dostępne po uwierzytelnieniu powinny ujawniać login użytkownika. Loginy i hasła należy zainicjować
w zmiennych tablicowych, a nie w bazie danych.

Należy skorzystać z następujących elementów języka PHP:

• funkcja session_start() – inicjuje mechanizm sesji,
• tablica $_SESSION – przechowuje wartości zmiennych sesji,
• funkcja isset($_SESSION[’zmienna’]) – sprawdza status zmiennej sesji.

Uwaga: Nie ma obowiązku implementowania mechanizmów ochrony przed przejęciem sesji itp.
Zadanie ma na celu jedynie zilustrowanie działania sesji w PHP.

